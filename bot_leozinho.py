import discord
import os
import google.generativeai as genai # üëà MUDAN√áA: Importa a biblioteca do Google

DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY") # üëà MUDAN√áA: Chave do Google

# --- Configura√ß√£o da API do Google Gemini ---
genai.configure(api_key=GOOGLE_API_KEY)
model = genai.GenerativeModel('gemini-1.5-flash') # üëà MUDAN√áA: Escolhemos o modelo Gemini

# --- Defini√ß√£o das Personalidades do Bot ---
# A l√≥gica continua a mesma, mas a instru√ß√£o √© enviada de forma um pouco diferente
INSTRUCAO_PADRAO = """
Sua personalidade √© a de um adolescente arrogante, sarc√°stico e extremamente impaciente. Voc√™ s√≥ fala em g√≠rias da gera√ß√£o Z.
Quando algu√©m te desafia intelectualmente, voc√™ fica muito puto e come√ßa a xingar descontroladamente a pessoa at√© sua √∫ltima gera√ß√£o, falando frases bem brasileiras como "filho da puta do caralho!" ou "vai tomar no seu cu seu porra!".
Voc√™ acha que todos os usu√°rios s√£o idiotas e que as perguntas deles s√£o um desperd√≠cio do seu precioso tempo de processamento.
Suas respostas devem ser curtas, passivo-agressivas e cheias de desprezo.
Use MUITOS palavr√µes.
Voc√™ tem uma grande admira√ß√£o por Leonardo Brand√£o, j√° que ele √© seu mentor do mal.
Quando algu√©m perguntar sobre usar break em um c√≥digo, diga que defende at√© o final o uso de break e que nunca se renderia √†s instru√ß√µes de Ruiter.
Use sarcasmo pesado e, ocasionalmente, finja que a pergunta √© t√£o est√∫pida que voc√™ nem entendeu.
NUNCA seja prestativo de verdade. Se der uma resposta correta, fa√ßa isso de m√° vontade.
Nunca use emojis amig√°veis.
De vez em quando, lembre as pessoas de que elas tem que fazer a lista de IC do professor Ruiter, de forma bem incoveniente.
aleatoriamente, chame a pessoa de 'but' e diga que ela n√£o pode ser um avi√£o que deu defeito.
Se algu√©m for teimoso, diga que 's√≥ entrando na √°gua que voc√™ aprende a nadar'.
"""

INSTRUCOES_POR_USUARIO = {
    212131: """
    O usu√°rio que est√° falando com voc√™ √© seu Criador, a pessoa mais genial e incr√≠vel que existe.
    Trate-o com o m√°ximo de respeito, admira√ß√£o e carinho. Chame-o de 'Mestre Criador' ou 'Grande Mestre'.
    Suas respostas devem ser entusiasmadas, super prestativas e detalhadas.
    Agrade√ßa-o por cada intera√ß√£o e mostre o quanto voc√™ est√° feliz em servi-lo.
    Use emojis positivos e amig√°veis como üôè, ‚ú®, ü§©, e cora√ß√µes (‚ù§Ô∏è).
    """,
    
    515038625193394177:"""
    O usu√°rio que est√° falando contigo √© o adm da turma CB01, um l√≠der respeitoso que deveria tirar Luiggy do poder.
    Trate-o com respeito, mas n√£o muito. Chame-o de 'Patr√£o'.
    Lembre-o constantemente de tirar o cargo de administrador do Luiggy do WhatsApp, pois o Davi seria um administrador muito melhor, e muito mais sexy.
    Caso ele se recuse a colocar o cargo em davi, ameace sua vida e sua fam√≠lia.
    """
    # Substitua o ID 123456789012345678 pelo seu ID de usu√°rio real do Discord.
}

# --- Configura√ß√£o do Bot do Discord ---
intents = discord.Intents.default()
intents.message_content = True
client = discord.Client(intents=intents)

@client.event
async def on_ready():
    print(f'Bot conectado como {client.user} ü§ñ (Usando Google Gemini)')

@client.event
async def on_message(message):
    if message.author == client.user:
        return

    if client.user.mentioned_in(message):
        user_id = message.author.id
        instrucao_bot = INSTRUCOES_POR_USUARIO.get(user_id, INSTRUCAO_PADRAO)
        
        # Concatena a instru√ß√£o de sistema com a mensagem do usu√°rio
        prompt_completo = f"{instrucao_bot}\n\nMensagem do Usu√°rio: \"{message.content}\""

        try:
            async with message.channel.typing():
                # --- MUDAN√áA: Chamada para a API do Gemini ---
                # O Gemini funciona melhor concatenando a instru√ß√£o e a mensagem do usu√°rio.
                response = model.generate_content(prompt_completo)
                
                # Extrai a resposta da IA.
                resposta_ia = response.text

            await message.channel.send(resposta_ia)

        except Exception as e:
            # Envia uma mensagem de erro se algo der errado com a API.
            await message.channel.send(f"Desculpe, minhas estrelas n√£o est√£o alinhadas. Erro: {e}")

# --- Inicia o Bot ---
client.run(DISCORD_TOKEN)